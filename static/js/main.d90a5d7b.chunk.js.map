{"version":3,"sources":["components/common/Headers/PageHeader.tsx","components/common/Headers/PageTitle.tsx","components/common/Schedule/ScheduleCard.tsx","components/common/Schedule/DayCheck.tsx","components/common/Headers/SectionHeader.tsx","components/common/Descriptions/SectionDescription.tsx","components/sections/Schedule.tsx","components/sections/About.tsx","components/common/FAQ/QuestionHeader.tsx","components/common/FAQ/Answer.tsx","components/common/FAQ/FAQSegment.tsx","components/sections/FAQ.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Title","styled","div","props","children","Box","DescText","TitleText","Border","dayColor","BoxGroup","TitleGroup","DayLabel","title","description","day","dayPicker","DayText","DayColor","DayGroup","checked","onClick","style","fontWeight","Description","ScheduleGroup","EventGroup","DayCheckGroup","FlexCenter","FlexColumn","FILTER_TYPES","useState","Array","length","fill","filters","setFilters","toggleDayCheck","index","newFilters","SectionDescription","DayCheck","events","filter","event","every","indexOf","map","i","key","QuestionHeader","Answer","Constraint","SectionHeader","FAQSegment","FlexContainer","FlexLeft","SectionDiv","PageTitle","PageHeader","About","Schedule","FAQ","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d90a5d7b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nconst Title: AnyStyledComponent = styled.div`\r\n  font-family: Poppins;\r\n  font-size: 250%;\r\n  padding: 4%;\r\n  font-style: normal;\r\n  font-weight: 900;\r\n  line-height: 1em;\r\n  letter-spacing: 1px;\r\n  @media (max-width: 600px) {\r\n    font-size: 9vw;\r\n  }\r\n`;\r\n\r\nexport default (props: any) => {\r\n  return <Title>{props.children}</Title>;\r\n};\r\n","import React from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nconst Title: AnyStyledComponent = styled.div`\r\n  font-family: Poppins;\r\n  font-size: 250%;\r\n  padding: 4%;\r\n  padding-bottom: 1%;\r\n  font-style: normal;\r\n\r\n  letter-spacing: 1px;\r\n  @media (max-width: 600px) {\r\n    font-size: 9vw;\r\n  }\r\n`;\r\n\r\nexport default (props: any) => {\r\n  return <Title>{props.children}</Title>;\r\n};\r\n","import React from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\ninterface CardProps {\r\n  title: string;\r\n  description: string;\r\n  dayColor?: string;\r\n  day: string;\r\n}\r\n\r\nconst Box: AnyStyledComponent = styled.div`\r\n  flex-grow: 1;\r\n\r\n  flex-basis: 0;\r\n\r\n  height: auto;\r\n  margin-left: 13px;\r\n  display: flex;\r\n  border-radius: 10px;\r\n  padding: 1%;\r\n  background-color: white;\r\n  flex-direction: column;\r\n  color: black;\r\n`;\r\nconst DescText: AnyStyledComponent = styled.div`\r\n  font-weight: 400;\r\n  font-size: 1em;\r\n`;\r\nconst TitleText: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  font-weight: 400;\r\n  padding-right: 10px;\r\n  font-size: 1.5em;\r\n  padding-bottom: 2%;\r\n`;\r\nconst Border: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  border-left: 10px solid ${(props: CardProps) => props.dayColor};\r\n  border-radius: 10px;\r\n`;\r\nconst BoxGroup: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n\r\n  padding-bottom: 5%;\r\n`;\r\nconst TitleGroup: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nconst DayLabel: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  background-color: ${(props: CardProps) => props.dayColor};\r\n  border-radius: 50px;\r\n  margin-top: 5px;\r\n  padding: 4px;\r\n  color: white;\r\n  height: 23px;\r\n  @media (min-width: 600px) {\r\n    display: none;\r\n`;\r\n\r\nexport default ({ title, description, day }: CardProps) => {\r\n  function dayPicker() {\r\n    switch (day) {\r\n      case \"Monday\":\r\n        return \"#e43883\";\r\n      case \"Tuesday\":\r\n        return \"#4825FF\";\r\n      case \"Wednesday\":\r\n        return \"#E4CF38\";\r\n      case \"Thursday\":\r\n        return \"#40ABD7\";\r\n      default:\r\n        return \"gray\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <BoxGroup>\r\n        <Border dayColor={dayPicker} />\r\n        <Box>\r\n          <TitleGroup>\r\n            <TitleText>{title}</TitleText>\r\n            <DayLabel dayColor={dayPicker}>{day}</DayLabel>\r\n          </TitleGroup>\r\n\r\n          <DescText>{description}</DescText>\r\n        </Box>\r\n      </BoxGroup>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\ninterface IDayCheckProps {\r\n  checked: boolean;\r\n  onClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\r\n  day: string;\r\n  dayColor?: string;\r\n}\r\n\r\nconst DayText: AnyStyledComponent = styled.div`\r\n  font-size: 1.5em;\r\n  display: flex;\r\n  user-select: none;\r\n  padding-left: 50px;\r\n`;\r\nconst DayColor: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  margin-top: 5px;\r\n  border-radius: 50%;\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: ${(props: IDayCheckProps) => props.dayColor};\r\n`;\r\nconst DayGroup: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  padding-bottom: 7%;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  padding: 10px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default ({ day, checked, onClick }: IDayCheckProps) => {\r\n  // const { checked, onClick } = props;\r\n\r\n  function dayPicker() {\r\n    switch (day) {\r\n      case \"Monday\":\r\n        return \"#e43883\";\r\n      case \"Tuesday\":\r\n        return \"#4825FF\";\r\n      case \"Wednesday\":\r\n        return \"#E4CF38\";\r\n      case \"Thursday\":\r\n        return \"#40ABD7\";\r\n      default:\r\n        return \"gray\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DayGroup onClick={onClick}>\r\n        <DayColor dayColor={dayPicker} />\r\n        <DayText style={{ fontWeight: checked ? \"bold\" : \"normal\" }}>\r\n          {day}\r\n        </DayText>\r\n      </DayGroup>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nconst Title: AnyStyledComponent = styled.div`\r\n  font-family: Poppins;\r\n\r\n  font-size: 250%;\r\n  padding: 1%;\r\n  font-style: normal;\r\n  font-weight: 900;\r\n  line-height: 1em;\r\n  letter-spacing: 1px;\r\n  @media (max-width: 600px) {\r\n    font-size: 9vw;\r\n  }\r\n`;\r\n\r\nexport default (props: any) => {\r\n  return <Title>{props.children}</Title>;\r\n};\r\n","import React from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nconst Description: AnyStyledComponent = styled.div`\r\n  font-family: Poppins;\r\n  font-size: 120%;\r\n  max-width: 500px;\r\n\r\n  text-align: center;\r\n  font-style: normal;\r\n\r\n  line-height: 1.5em;\r\n  letter-spacing: 1px;\r\n  @media (max-width: 600px) {\r\n    font-size: 3vw;\r\n    max-width: 90%;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport default (props: any) => {\r\n  return <Description>{props.children}</Description>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\nimport events from \"../../data/events.json\";\r\n\r\nimport Card from \"../common/Schedule/ScheduleCard\";\r\nimport DayCheck from \"../common/Schedule/DayCheck\";\r\nimport SectionTitle from \"../common/Headers/SectionHeader\";\r\nimport SectionDescription from \"../common/Descriptions/SectionDescription\";\r\n\r\nconst ScheduleGroup: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n\r\n  flex-direction: row;\r\n`;\r\n\r\nconst EventGroup: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  padding: 2%;\r\n`;\r\nconst DayCheckGroup: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  padding-right: 10%;\r\n\r\n  flex-direction: column;\r\n  @media (max-width: 600px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst FlexCenter: AnyStyledComponent = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\nconst FlexColumn: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n`;\r\n\r\nconst FILTER_TYPES: string[] = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\"];\r\n\r\nexport default () => {\r\n  const [filters, setFilters]: [boolean[], (x: boolean[]) => void] = useState<\r\n    boolean[]\r\n  >(new Array(FILTER_TYPES.length).fill(false));\r\n\r\n  const toggleDayCheck: (x: number) => void = (index: number): void => {\r\n    const newFilters: boolean[] = [...filters];\r\n    newFilters[index] = !newFilters[index];\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  const showEvent: (x: string) => boolean = (day: string): boolean => {\r\n    if (\r\n      filters.every((filter: boolean) => {\r\n        return filter === false;\r\n      }) ||\r\n      filters[FILTER_TYPES.indexOf(day)]\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FlexColumn>\r\n        <FlexCenter>\r\n          <SectionTitle>Schedule</SectionTitle>\r\n        </FlexCenter>\r\n        <FlexCenter>\r\n          <SectionDescription>During 5:30-6:30 pm CDT</SectionDescription>\r\n        </FlexCenter>\r\n      </FlexColumn>\r\n\r\n      <ScheduleGroup>\r\n        <DayCheckGroup>\r\n          <DayCheck\r\n            checked={filters[0]}\r\n            onClick={() => {\r\n              toggleDayCheck(0);\r\n            }}\r\n            day=\"Monday\"\r\n          />\r\n          <DayCheck\r\n            checked={filters[1]}\r\n            onClick={() => {\r\n              toggleDayCheck(1);\r\n            }}\r\n            day=\"Tuesday\"\r\n          />\r\n          <DayCheck\r\n            checked={filters[2]}\r\n            onClick={() => {\r\n              toggleDayCheck(2);\r\n            }}\r\n            day=\"Wednesday\"\r\n          />\r\n          <DayCheck\r\n            checked={filters[3]}\r\n            onClick={() => {\r\n              toggleDayCheck(3);\r\n            }}\r\n            day=\"Thursday\"\r\n          />\r\n        </DayCheckGroup>\r\n\r\n        <EventGroup>\r\n          {events\r\n            .filter((event: any) => {\r\n              return showEvent(event.day);\r\n            })\r\n            .map((event: any, i: number) => {\r\n              return <Card {...event} key={i} />;\r\n            })}\r\n        </EventGroup>\r\n      </ScheduleGroup>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\nimport SectionTitle from \"../common/Headers/SectionHeader\";\r\nimport SectionDescription from \"../common/Descriptions/SectionDescription\";\r\n\r\nconst FlexCenter: AnyStyledComponent = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 0;\r\n`;\r\nconst FlexColumn: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default (props: any) => {\r\n  return (\r\n    <div>\r\n      <FlexColumn>\r\n        <FlexCenter>\r\n          <SectionTitle>About</SectionTitle>\r\n        </FlexCenter>\r\n        <FlexCenter>\r\n          <SectionDescription>\r\n            Event for high schools to build hype and get them acclimated. HYPE\r\n            HYPE!\r\n          </SectionDescription>\r\n        </FlexCenter>\r\n      </FlexColumn>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nconst Title: AnyStyledComponent = styled.div`\r\n  font-family: Poppins;\r\n  font-size: 150%;\r\n  padding: 3%;\r\n  padding-top: 20%;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 1em;\r\n  letter-spacing: 1px;\r\n  @media (max-width: 600px) {\r\n    font-size: 5vw;\r\n  }\r\n`;\r\n\r\nexport default (props: any) => {\r\n  return <Title>{props.children}</Title>;\r\n};\r\n","import React from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nconst Title: AnyStyledComponent = styled.div`\r\n  font-family: Poppins;\r\n  font-size: 130%;\r\n  padding-top: 10%;\r\n  font-style: normal;\r\n  font-weight: 300;\r\n  line-height: 1em;\r\n  letter-spacing: 1px;\r\n  @media (max-width: 600px) {\r\n    font-size: 3vw;\r\n  }\r\n`;\r\n\r\nexport default (props: any) => {\r\n  return <Title>{props.children}</Title>;\r\n};\r\n","import React from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\nimport QuestionHeader from \"./QuestionHeader\";\r\nimport Answer from \"./Answer\";\r\n\r\ninterface ISegmentProps {\r\n  title: string;\r\n  children: string;\r\n}\r\nconst FlexCenter: AnyStyledComponent = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 0;\r\n`;\r\nconst FlexColumn: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default ({ title, children }: ISegmentProps) => {\r\n  return (\r\n    <div>\r\n      <FlexColumn>\r\n        <FlexCenter>\r\n          <QuestionHeader>{title}</QuestionHeader>\r\n        </FlexCenter>\r\n        <FlexCenter>\r\n          <Answer>{children}</Answer>\r\n        </FlexCenter>\r\n      </FlexColumn>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\nimport FAQSegment from \"../common/FAQ/FAQSegment\";\r\nimport SectionHeader from \"../common/Headers/SectionHeader\";\r\n\r\nconst FlexCenter: AnyStyledComponent = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n\r\n  padding: 0;\r\n`;\r\nconst FlexColumn: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nconst Constraint: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n`;\r\nexport default (props: any) => {\r\n  return (\r\n    <div>\r\n      <FlexColumn>\r\n        <FlexCenter>\r\n          <SectionHeader>FAQ</SectionHeader>\r\n        </FlexCenter>\r\n        <FlexCenter>\r\n          <Constraint>\r\n            <FlexCenter>\r\n              <FlexColumn>\r\n                <FAQSegment title=\"What?\">sd</FAQSegment>\r\n                <FAQSegment title=\"When?\">sd</FAQSegment>\r\n                <FAQSegment title=\"Where?\">sd</FAQSegment>\r\n                <FAQSegment title=\"Who?\">sd</FAQSegment>\r\n                <FAQSegment title=\"Others?\">sd</FAQSegment>\r\n              </FlexColumn>\r\n            </FlexCenter>\r\n          </Constraint>\r\n        </FlexCenter>\r\n      </FlexColumn>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nimport PageHeader from \"./components/common/Headers/PageHeader\";\r\nimport PageTitle from \"./components/common/Headers/PageTitle\";\r\n\r\nimport Schedule from \"./components/sections/Schedule\";\r\nimport About from \"./components/sections/About\";\r\nimport FAQ from \"./components/sections/FAQ\";\r\n\r\nconst FlexContainer: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst FlexCenter: AnyStyledComponent = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\n\r\nconst FlexLeft: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Constraint: AnyStyledComponent = styled.div`\r\n  display: flex;\r\n\r\n  width: 1000px;\r\n`;\r\nconst SectionDiv: AnyStyledComponent = styled.div`\r\n  padding-bottom: 8%;\r\n  padding-top: 8%;\r\n`;\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <FlexCenter>\r\n        <Constraint>\r\n          <FlexContainer>\r\n            <FlexLeft>\r\n              <PageTitle>PickHacks presents</PageTitle>\r\n              <PageHeader>PreHacks</PageHeader>\r\n            </FlexLeft>\r\n            <SectionDiv>\r\n              <About />\r\n            </SectionDiv>\r\n\r\n            <SectionDiv>\r\n              <Schedule />\r\n            </SectionDiv>\r\n\r\n            <SectionDiv>\r\n              <FAQ />\r\n            </SectionDiv>\r\n          </FlexContainer>\r\n        </Constraint>\r\n      </FlexCenter>\r\n    </div>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}